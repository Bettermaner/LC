# 解题思路
    
    # 如果数组长度为偶数中位数则为，中位数为中间两个数和的平均数，如果长度为奇数，中位数为数组最中间的那个数

    # 思路1
    #快速排序
    # 任意取一个数key当进行快速排序后，发现key左边的数的长度为 (n-1/2),则key为中位数，如果 小于(n-1/2)，说明中位数在右侧部分，大于(n-1/2)，说明 中位数在左侧部分。
    # 然后进入相应的一侧继续寻找中位
    # https://www.zhangshengrong.com/p/7B1Lq6e7aw/


    # 思路2
    # 建立最小堆与最大堆来解决
    # 最小堆存储较大的一部分数，最大堆存储较小的一部分数
    # 当数组长度为偶数时，最小堆长度为 n /2，最大堆长度为 n /2
    # 当数组长度为奇数时，最小堆长度为 n+1 /2，最大堆长度为 n-1 /2

    # 当最小堆长度 = 最大堆长度时，往最小堆长度里面加数
    # 加的时候先加入最大堆中，然后取最大堆堆顶的数据，加入到最小堆中
    # 当最小堆长度 > 最大堆长度时，往最大堆长度里面加数
    # 加的时候先加入最小堆中，然后取最小堆堆顶的数据，加入到最大堆中
    # 直至无序数值中所有的数据被加入完毕。

    # 如果数组长度为偶数，中位数则取 最小堆与最大堆顶的和 / 2
    # 如果数组长度为奇数，中位数则取 最大堆顶的值

    # 查询中位数时间复杂度 O(1)
    # 加入数到堆中时间复杂度 O(logN)
    # 整体时间复杂度 O(NlogN)
    # 空间复杂度 O(N)



