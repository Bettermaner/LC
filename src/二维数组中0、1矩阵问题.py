# 解题思路
    # 因为可以上下左右寻找最近0的距离，所以考虑双向动态规划
    # 一个动态规划只能考虑到上侧或者左侧的最近0的距离（下侧和右侧的数据还没有遍历到）
    # 考虑从左上角到右下角动态规划，再右下角到左上角动态规划。
    # 当 mat[i][j] = 0 ,dp[i][j] = 0
    # 1.dp[i][j] = min(dp[i-1][j] + 1,dp[i][j-1] + 1) , i > 0, j > 0
    # 2.dp[i][j] = min(dp[i+1][j] + 1, dp[i][j+1] + 1), i < len(mat) -1, j < len(mat[0]) -1